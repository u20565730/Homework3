@model u20565730_HWK03.Models.CombinedBooks
@using PagedList.Mvc;
@using PagedList;

@{
    ViewBag.Title = "CombinedIndex";
}



<head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

</head>

<body>

    <div class="row">
        <div class="col-md-5">
            <h2> Books</h2>
            <p>
                <button class="btn btn-success">
                    <a href="#" class="create-link" data-url="@Url.Action("Create", "books")" style="color:white">Add a Book</a>
                </button>
            </p>
            <table class="table" style="width:80%">
                <tr>
                    <th>
                        ID
                    </th>
                    <th>
                        Book Name
                    </th>
                    <th>
                        Page Count
                    </th>
                    <th>
                        Point
                    </th>
                    <th>
                        Author
                    </th>
                    <th>
                        Book Type
                    </th>
                    <th>
                        Availability Status
                    </th>
                </tr>

                @foreach (var item in Model.Book)
                {
                    var lastBorrow = Model.Borrow.Where(b => b.bookId == item.bookId).LastOrDefault();

                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.bookId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.pagecount)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.point)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.author.name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.type.name)
                        </td>
                        <td>
                            @if (lastBorrow != null)
                            {

                                if ((Model.Borrow.Where(b => b.bookId == item.bookId).LastOrDefault()).broughtDate < DateTime.Now && lastBorrow != null)
                                {
                                    <span class="text-success">Available</span>
                                }
                                else
                                {
                                    <span class="text-danger">Out</span>
                                }
                            }
                            else
                            { <span class="text-success">Available</span>
                            }
                        </td>
                    </tr>
                }

            </table>
            Page @(Model.Book.PageCount < Model.Book.PageNumber ? 0 : Model.Book.PageNumber) of @Model.Book.PageCount

            @Html.PagedListPager(Model.Book, page => Url.Action("Index",
                new { page = page, page2 = 1, page3 = 1 }))
        </div>
        <div class="col-md-2">
        </div>
        <div class="col-md-5">
            <h2> Students</h2>
            <p>
                <button class="btn btn-success">
                    <a href="#" class="create-link" data-url="@Url.Action("Create", "students")" style="color:white">Add a Student</a>
                </button>
            </p>
            <table class="table" style="width:80%">
                <tr>
                    <th>
                        ID
                    </th>
                    <th>
                        Name
                    </th>
                    <th>
                        Surname
                    </th>
                    <th>
                        Birth Date
                    </th>
                    <th>
                        Class
                    </th>
                    <th>
                        Gender
                    </th>
                    <th>
                        Point
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model.Student)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.studentId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.surname)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.birthdate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.@class)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.gender)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.point)
                        </td>
                    </tr>
                }

            </table>
            Page @(Model.Student.PageCount < Model.Student.PageNumber ? 0 : Model.Student.PageNumber) of @Model.Student.PageCount

            @Html.PagedListPager(Model.Student, page => Url.Action("Index",
                new { page = 1, page2 = page, page3 = 1 }))
        </div>
    </div>

    <div id="myModal" class="modal fade" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body" id="modal-content">
                </div>
            </div>
        </div>
    </div>
</body>

<script>
    $(function () {
        $(".edit-link, .edit-link-in-modal").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");

            $.get(url, function (data) {
                $("#modal-content").empty();
                $("#modal-content").html(data);
                $("#myModal").modal("show");
            });
        });

        $("#modal-content").on("submit", "form", function (e) {
            e.preventDefault();
            var form = $(this);
            var url = form.attr("action");
            var formData = form.serialize();

            $.post(url, formData, function (data) {
                $("#myModal").modal("hide");
                location.reload();
            });
        });

        $(".details-link, .delete-link, .create-link, .create-lookup-link").click(function (e) {
            e.preventDefault();
            var url = $(this).data("url");

            $.get(url, function (data) {
                $("#modal-content").empty();
                $("#modal-content").html(data);
                $("#myModal").modal("show");
            });
        });
    });
</script>








